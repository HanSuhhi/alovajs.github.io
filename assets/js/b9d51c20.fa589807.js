"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[3617],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7076:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},l=void 0,i={unversionedId:"example-code/init-page",id:"example-code/init-page",title:"init-page",description:"@file App.vue",source:"@site/docs/example-code/init-page.md",sourceDirName:"example-code",slug:"/example-code/init-page",permalink:"/example-code/init-page",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/tree/main/docs/templates/shared/docs/example-code/init-page.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"editor",permalink:"/example-code/editor"},next:{title:"load-more",permalink:"/example-code/load-more"}},p={},s=[],c={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"::: vue-playground Click right btn to view code"),(0,r.kt)("p",null,"@file App.vue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <span v-if="loading">Loading...</span>\n  <span v-else-if="error">{{ error.message }}</span>\n  <ul v-else>\n    <li v-for="item in data" :key="item">{{ item }}</li>\n  </ul>\n</template>\n\n<script setup>\nimport { listFruits } from \'./api.js\';\nimport { useRequest } from \'alova\';\n\nconst { data, loading, error } = useRequest(listFruits, {\n  initialData: [],\n});\n<\/script>\n')),(0,r.kt)("p",null,"@file api.js"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { createAlova } from 'alova';\nimport VueHook from 'alova/vue';\nimport { createAlovaMockAdapter, defineMock } from '@alova/mock';\n\n// mock data\nconst mockData = defineMock({\n  '/list-fruits': ['apple', 'banana', 'orange'],\n});\n\n// create a alova instance\nconst alovaInst = createAlova({\n  baseURL: 'http://example.com',\n  statesHook: VueHook,\n  requestAdapter: createAlovaMockAdapter([mockData], { delay: 1500 }),\n  responsed: response => response.json(),\n});\n\nexport const listFruits = () => alovaInst.Get('/list-fruits');\n\n\n")),(0,r.kt)("p",null,"@import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "imports": {\n    "alova": "https://unpkg.com/alova/dist/alova.esm.js",\n    "alova/GlobalFetch": "https://unpkg.com/alova/dist/adapter/globalfetch.esm.js",\n    "alova/vue": "https://unpkg.com/alova/dist/hooks/vuehook.esm.js",\n    "@alova/mock": "https://unpkg.com/@alova/mock/dist/alova-mock.esm.js"\n  }\n}\n')),(0,r.kt)("p",null,":::"))}u.isMDXComponent=!0}}]);