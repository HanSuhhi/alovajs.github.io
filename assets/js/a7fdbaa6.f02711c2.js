"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[5401],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>p});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),p=o,f=m["".concat(l,".").concat(p)]||m[p]||d[p]||i;return n?a.createElement(f,r(r({ref:t},c),{},{components:n})):a.createElement(f,r({ref:t},c))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),o=n(6010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(i,r),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(7462),o=n(7294),i=n(6010),r=n(2389),s=n(7392),l=n(7094),u=n(2466);const c="tabList__CuJ",d="tabItem_LNqP";function m(e){var t;const{lazy:n,block:r,defaultValue:m,values:p,groupId:f,className:b}=e,h=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=p??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,s.l)(v,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===m?m:m??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:k}=(0,l.U)(),[x,T]=(0,o.useState)(y),O=[],{blockElementScrollPositionUntilNextRender:N}=(0,u.o5)();if(null!=f){const e=w[f];null!=e&&e!==x&&v.some((t=>t.value===e))&&T(e)}const S=e=>{const t=e.currentTarget,n=O.indexOf(t),a=v[n].value;a!==x&&(N(t),T(a),null!=f&&k(f,String(a)))},E=e=>{var t;let n=null;switch(e.key){case"Enter":S(e);break;case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]??O[O.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,i.Z)("tabs-container",c)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},b)},v.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>O.push(e),onKeyDown:E,onClick:S},r,{className:(0,i.Z)("tabs__item",d,null==r?void 0:r.className,{"tabs__item--active":x===t})}),n??t)}))),n?(0,o.cloneElement)(h.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function p(e){const t=(0,r.Z)();return o.createElement(m,(0,a.Z)({key:String(t)},e))}},9188:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var a=n(7462),o=(n(7294),n(3905)),i=n(5488),r=n(5162);const s={title:"Silent/Offline submit",sidebar_position:70},l=void 0,u={unversionedId:"next-step/silent-offline-submit",id:"next-step/silent-offline-submit",title:"Silent/Offline submit",description:"Suppose you want to further improve the experience of creating todo items, and let the user click the Create button to take effect immediately, without feeling the process of submitting to the server, you can consider using the silent submission method.",source:"@site/docs/06-next-step/07-silent-offline-submit.md",sourceDirName:"06-next-step",slug:"/next-step/silent-offline-submit",permalink:"/next-step/silent-offline-submit",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/06-next-step/07-silent-offline-submit.md",tags:[],version:"current",sidebarPosition:70,frontMatter:{title:"Silent/Offline submit",sidebar_position:70},sidebar:"tutorialSidebar",previous:{title:"Download/Upload progress",permalink:"/next-step/download-upload-progress"},next:{title:"Delay data update",permalink:"/next-step/delayed-data-update"}},c={},d=[{value:"Offline submission",id:"offline-submission",level:2}],m={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Suppose you want to further improve the experience of creating todo items, and let the user click the ",(0,o.kt)("strong",{parentName:"p"},"Create")," button to take effect immediately, without feeling the process of submitting to the server, you can consider using the silent submission method."),(0,o.kt)("p",null,"You might be thinking, can the server render the results to the user without a response? Yes, alova has a reliable mechanism for background requests. In the network connection environment, the request is repeated every 2 seconds until the request is successfully completed. This is very effective when the service is unstable. Of course, you still need to remind you that unstable In this case, if your data is displayed on multiple ends, it may be a little out of sync."),(0,o.kt)("p",null,"Let's show the code that silently creates todo items."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const createTodoPoster = newTodo => alovaInstance.Post('/todo/create', newTodo);\n\nconst { send, onSuccess } = useRequest(createTodoPoster, {\n  // Enable silent submit on request\n  silent: true\n});\nonSuccess(() => {\n  // After silent submission, onSuccess will be called immediately, and the first parameter of the callback function is undefined\n  // and onError will never be called\n  // Immediately add the new todo item to the list\n  updateState(todoListGetter, todoList => [...todoList, newTodo]);\n});\n\n// Click the create button to trigger this function\nconst handleSubmit = () => {\n  send({\n    title: 'test todo',\n    time: '12:00'\n  });\n};\n")),(0,o.kt)("p",null,"There is a problem with the above silent submission, that is, the new todo item does not have an id, and the id generally needs to wait for the submission to return. At this time, we can use delayed data update."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// omit other code...\nonSuccess(() => {\n  updateState(todoListGetter, todoList => [\n    ...todoList,\n    {\n      // id is set as a placeholder, which will be automatically replaced with actual data after waiting for the response\n      '+id': ({ id }) => id,\n      ...newTodo\n    }\n  ]);\n});\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Learn more about ",(0,o.kt)("a",{parentName:"p",href:"./delayed-data-update"},"Delayed Data Update"))),(0,o.kt)("h2",{id:"offline-submission"},"Offline submission"),(0,o.kt)("p",null,"If you are developing an online document writer, each input of the user needs to be automatically synchronized to the server, and the user can continue to write even in the offline state. In this scenario, we can use the offline submission mechanism of ",(0,o.kt)("inlineCode",{parentName:"p"},"alova")," , in fact, this function and the silent submission function are integrated, both benefit from the reliable mechanism of ",(0,o.kt)("inlineCode",{parentName:"p"},"alova")," background request."),(0,o.kt)("p",null,"Its processing method is that when silent submission is enabled, submitting data in offline state will directly cache the request data locally, and when the network is restored, the cached request data will be automatically resubmitted to the server, which ensures that Silent submits while offline are also reliable."),(0,o.kt)("p",null,"Next, we take the online document writer as an example to show the code submitted offline."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(r.Z,{label:"vue",value:"1",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<template>\n  <div v-if=\"loading\">Submitting...</div>\n  <textarea v-model=\"editingText\"></textarea>\n</template>\n\n<script setup>\n  import { ref } from 'vue';\n  import { useWatcher } from 'alova';\n\n  const editingText = ref('');\n  const saveDoc = () =>\n    alovaInstance.Post('/doc/save', {\n      text: editingText.value\n    });\n  const { loading } = useWatcher(saveDoc, [editingText], {\n    // enable silent submit\n    silent: true,\n\n    // Set 500ms anti-shake to reduce server pressure\n    debounce: 500\n  });\n<\/script>\n"))),(0,o.kt)(r.Z,{label:"react",value:"2",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useState } from 'react';\nimport { useWatcher } from 'alova';\n\nconst saveDoc = text => alovaInstance.Post('/doc/save', { text });\nconst App = () => {\n  const [editingText, useEditingText] = useState('');\n\n  const { loading } = useWatcher(() => saveDoc(editingText), [editingText], {\n    // enable silent submit\n    silent: true,\n\n    // Set 500ms anti-shake to reduce server pressure\n    debounce: 500\n  });\n\n  return (\n    <>\n      {loading ? <div>Submitting...</div> : null}\n      <textarea\n        value={editingText}\n        onInput={e => setEditingText(e.target.value)}></textarea>\n    </>\n  );\n};\n"))),(0,o.kt)(r.Z,{label:"svelte",value:"3",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  import { writable } from 'svelte/store';\n  import { useWatcher } from 'alova';\n\n  const editingText = writable('');\n  const saveDoc = () =>\n    alovaInstance.Post('/doc/save', {\n      text: $editingText\n    });\n  const { loading } = useWatcher(saveDoc, [editingText], {\n    // enable silent submit\n    silent: true,\n\n    // Set 500ms anti-shake to reduce server pressure\n    debounce: 500\n  });\n<\/script>\n{#if loading}\n<div>Submitting...</div>\n{/if}\n<textarea bind:value=\"{editingText}\"></textarea>\n")))),(0,o.kt)("p",null,"This completes the simple online document writer. Of course, offline submission is also applicable in the example of silent submission to create todo items, that is, the smooth creation of todo items can be guaranteed even in the offline state."))}p.isMDXComponent=!0}}]);