"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[1425],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),h=c(n),p=r,m=h["".concat(l,".").concat(p)]||h[p]||d[p]||o;return n?a.createElement(m,s(s({ref:t},u),{},{components:n})):a.createElement(m,s({ref:t},u))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,s),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>T});var a=n(7462),r=n(7294),o=n(6010),s=n(2466),i=n(6550),l=n(1980),c=n(7392),u=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=h(e),[s,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[l,c]=m({queryString:n,groupId:a}),[d,v]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),f=(()=>{const e=l??d;return p({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),v(e)}),[c,v,o]),tabValues:o}}var f=n(2389);const g="tabList__CuJ",b="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),h=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==i&&(d(t),l(a))},p=e=>{var t;let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:p,onClick:h},s,{className:(0,o.Z)("tabs__item",b,null==s?void 0:s.className,{"tabs__item--active":i===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=v(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",g)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function T(e){const t=(0,f.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},8087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),s=n(5162);const i={title:"Actively Invalidate Response Cache",sidebar_position:20},l=void 0,c={unversionedId:"response-data-management/invalidate-response-cache",id:"response-data-management/invalidate-response-cache",title:"Actively Invalidate Response Cache",description:"There is such a scenario, when the user clicks on an item in the todo list, enters the todo details page and edits it, at this time we hope that the todo list data on the previous page will also be updated with the edited content, usually The approach is to trigger the content update of the previous page through events, which increases maintenance costs. And alova provides 3 ways to achieve this goal very elegantly:",source:"@site/docs/05-response-data-management/02-invalidate-response-cache.md",sourceDirName:"05-response-data-management",slug:"/response-data-management/invalidate-response-cache",permalink:"/response-data-management/invalidate-response-cache",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/05-response-data-management/02-invalidate-response-cache.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Actively Invalidate Response Cache",sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Transform response data",permalink:"/response-data-management/transform-response-data"},next:{title:"Update response status across pages/modules",permalink:"/response-data-management/update-response-data-across-modules"}},u={},d=[{value:"Use method instance lookup cache",id:"use-method-instance-lookup-cache",level:2},{value:"Dynamic lookup invalidation cache",id:"dynamic-lookup-invalidation-cache",level:2},{value:"Invalidate all caches",id:"invalidate-all-caches",level:2}],h={toc:d};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"There is such a scenario, when the user clicks on an item in the todo list, enters the todo details page and edits it, at this time we hope that the todo list data on the previous page will also be updated with the edited content, usually The approach is to trigger the content update of the previous page through events, which increases maintenance costs. And ",(0,r.kt)("inlineCode",{parentName:"p"},"alova")," provides 3 ways to achieve this goal very elegantly:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"useFetcher")," to immediately re-request the latest data, which has been mentioned in the above section;"),(0,r.kt)("li",{parentName:"ol"},"Manually update the cache, which will be explained in detail in the next section;"),(0,r.kt)("li",{parentName:"ol"},"Make the response cache invalid, and when the request is made again, the data will be re-requested due to the cache invalidation. This is what this section is about.")),(0,r.kt)("p",null,"As we mentioned in ",(0,r.kt)("a",{parentName:"p",href:"./get-started/response-cache"},"Cache Mode"),", each cached data is saved with the method instance that sent the request as the key, so the method instance will also be used when the cache is invalidated. Invalidate the corresponding cached data."),(0,r.kt)("p",null,"Now we try to achieve this requirement with cache invalidation."),(0,r.kt)("h2",{id:"use-method-instance-lookup-cache"},"Use method instance lookup cache"),(0,r.kt)("p",null,"In the invalidateCache function, a method instance is passed in, and it will always look for the cache under this instance to invalidate."),(0,r.kt)(o.Z,{groupId:"framework",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"1",label:"vue",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<template>\n  <button @click=\"send\">Send request</button>\n</template>\n\n<script setup>\n  import { invalidateCache } from 'alova';\n\n  const getTodoList = currentPage => {\n    return alovaInstance.Get('/todo/list', {\n      params: {\n        currentPage,\n        pageSize: 10\n      }\n    });\n  };\n\n  const {\n    //...\n    send,\n    onSuccess\n  } = useRequest(createTodoPoster, { immediate: false });\n\n  // highlight-start\n  // After the submission is successful, the todo data cache on the first page will be invalidated\n  onSuccess(() => {\n    invalidateCache(getTodoList(1));\n  });\n  // highlight-end\n<\/script>\n"))),(0,r.kt)(s.Z,{value:"2",label:"react",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { invalidateCache } from 'alova';\n\nconst getTodoList = currentPage => {\n  return alovaInstance.Get('/todo/list', {\n    params: {\n      currentPage,\n      pageSize: 10\n    }\n  });\n};\n\nconst App = () => {\n  const {\n    //...\n    send,\n    onSuccess\n  } = useRequest(createTodoPoster, { immediate: false });\n\n  // highlight-start\n  // After the submission is successful, the todo data cache on the first page will be invalidated\n  onSuccess(() => {\n    invalidateCache(getTodoList(1));\n  });\n  // highlight-end\n\n  return <button onClick={send}>send request</button>;\n};\n"))),(0,r.kt)(s.Z,{value:"3",label:"svelte",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  import { invalidateCache } from 'alova';\n\n  const getTodoList = currentPage => {\n    return alovaInstance.Get('/todo/list', {\n      params: {\n        currentPage,\n        pageSize: 10\n      }\n    });\n  };\n\n  const {\n    //...\n    send,\n    onSuccess\n  } = useRequest(createTodoPoster, { immediate: false });\n\n  // highlight-start\n  // After the submission is successful, the todo data cache on the first page will be invalidated\n  onSuccess(() => {\n    invalidateCache(getTodoList(1));\n  });\n  // highlight-end\n<\/script>\n\n<button on:click=\"{send}\">Send request</button>\n")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Its function is far more than that. We can also invalidate any number or even all caches by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"Method")," instance matchers.")),(0,r.kt)("h2",{id:"dynamic-lookup-invalidation-cache"},"Dynamic lookup invalidation cache"),(0,r.kt)("p",null,"Maybe sometimes you are not sure which cache data needs to be invalidated, but you know how to find the cached data that needs to be invalidated. We can use ",(0,r.kt)("a",{parentName:"p",href:"../next-step/method-instance-matcher"},"Method instance matcher")," To dynamically find the corresponding method instance. The following example shows how to invalidate the cache for the first 5 Method instances named todoList."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const getTodoList = currentPage => {\n  return alovaInstance.Get('/todo/list', {\n    // highlight-start\n    // First set the name for the method instance, which is used to filter out the required Method instance when the Method instance cannot be specified directly\n    name: 'todoList',\n    // highlight-end\n    params: {\n      currentPage,\n      pageSize: 10\n    }\n  });\n};\n\nconst {\n  //...\n  send,\n  onSuccess\n} = useRequest(createTodoPoster, { immediate: false });\n// After the submission is successful, the todo data cache on the first page will be invalidated\nonSuccess(() => {\n  // highlight-start\n  // Invalidate the cache of the first 5 Method instances named todoList\n  invalidateCache({\n    name: 'todoList',\n    filter: (method, index, ary) => {\n      return index < 5;\n    }\n  });\n  // highlight-end\n});\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"See ",(0,r.kt)("a",{parentName:"p",href:"../next-step/method-instance-matcher"},"Method instance matcher")," for more usage of ",(0,r.kt)("inlineCode",{parentName:"p"},"Method")," instance matcher")),(0,r.kt)("h2",{id:"invalidate-all-caches"},"Invalidate all caches"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// When no parameters are passed, invalidate all response caches\ninvalidateCache();\n")))}p.isMDXComponent=!0}}]);