"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[9679],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(g,s(s({ref:t},p),{},{components:a})):n.createElement(g,s({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},632:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={title:"Custom Storage Adapter",sidebar_position:30},s=void 0,i={unversionedId:"advanced/custom-storage-adapter",id:"advanced/custom-storage-adapter",title:"Custom Storage Adapter",description:"Alova involves multiple functions that require data persistence, such as persistent cache, silent submission, and offline submission. By default, alova will use localStorage to store persistent data, but considering the non-browser environment, it also supports customization.",source:"@site/docs/08-advanced/03-custom-storage-adapter.md",sourceDirName:"08-advanced",slug:"/advanced/custom-storage-adapter",permalink:"/advanced/custom-storage-adapter",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/08-advanced/03-custom-storage-adapter.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Custom Storage Adapter",sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Custom Request Adapter",permalink:"/advanced/custom-http-adapter"},next:{title:"Middleware",permalink:"/advanced/middleware"}},l={},c=[{value:"SessionStorage storage adapter example",id:"sessionstorage-storage-adapter-example",level:2}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Alova involves multiple functions that require data persistence, such as persistent cache, silent submission, and offline submission. ",(0,r.kt)("strong",{parentName:"p"},"By default, alova will use ",(0,r.kt)("inlineCode",{parentName:"strong"},"localStorage")," to store persistent data"),", but considering the non-browser environment, it also supports customization."),(0,r.kt)("p",null,"Customizing the storage adapter is also very simple, you only need to specify the functions for saving data, getting data, and removing data, roughly like this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const customStorageAdapter = {\n  set(key, value) {\n    // Save the data, value is structured data, which can be converted to a string by calling JSON.stringify\n  },\n  get(key) {\n    // retrieve data\n  },\n  remove(key) {\n    // remove data\n  }\n};\n")),(0,r.kt)("p",null,"Then pass in this adapter when creating an ",(0,r.kt)("inlineCode",{parentName:"p"},"alova")," instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const alovaInstance = createAlova({\n  //...\n  storageAdapter: customStorageAdapter\n});\n")),(0,r.kt)("h2",{id:"sessionstorage-storage-adapter-example"},"SessionStorage storage adapter example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const sessionStorageAdapter = {\n  set(key, value) {\n    sessionStorage.setItem(key, JSON.stringify(value));\n  },\n  get(key) {\n    return sessionStorage.getItem(key);\n  },\n  remove(key) {\n    sessionStorage.removeItem(key);\n  }\n};\n")))}u.isMDXComponent=!0}}]);