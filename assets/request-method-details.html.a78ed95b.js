import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as a,f as c}from"./app.4763b10d.js";const l={},d=c('<p><code>alova</code>实例对象提供了七种请求方法的抽象对象，包括GET、POST、PUT、DELETE、HEAD、OPTIONS、PATCH。为了简单易用，<code>alova</code>借鉴了和<code>axios</code>相同的参数结构。</p><ul><li>GET: <code>alovaInstance.Get(url[, config])</code>;</li><li>POST: <code>alovaInstance.Post(url[, data[, config]])</code>;</li><li>PUT: <code>alova.Put(url[, data[, config]])</code>;</li><li>DELETE: <code>alova.Delete(url[, data[, config]])</code>;</li><li>HEAD: <code>alova.Head(url[, config])</code>;</li><li>OPTIONS: <code>alova.Options(url[, config])</code>;</li><li>PATCH: <code>alova.Patch(url[, data[, config]])</code>;</li></ul><p>参数说明：</p><ul><li><code>url</code>是请求路径，它将会与<code>createAlova</code>中的<code>baseURL</code>拼接成完整的url进行请求；</li><li><code>data</code>为请求体数据对象；</li><li><code>config</code>为请求配置对象，其中包含了请求头、params参数等、请求行为参数等配置；</li></ul><h2 id="config参数说明" tabindex="-1"><a class="header-anchor" href="#config参数说明" aria-hidden="true">#</a> config参数说明</h2><p>固定配置项name、params、headers、transformData、localCache、timeout、enableDownload、enableUpload</p><p>其他配置项：根据配置不同的requestAdapter而不同，如GlobalFetch适配器将保留了<code>fetch(url, config)</code>中config的全部配置项</p>',7),i=[d];function t(n,r){return o(),a("div",null,i)}const u=e(l,[["render",t],["__file","request-method-details.html.vue"]]);export{u as default};
